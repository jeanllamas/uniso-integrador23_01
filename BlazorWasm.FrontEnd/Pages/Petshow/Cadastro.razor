@page "/petglamour/cadastro"
@layout BlankLayout
@inject IRepository<Cliente> repository
@inject NavigationManager navigationManager
@using System.Net.Http
@using System.Text.Json
@using System.Text

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/cadastro.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <title>PetShow - Cadastro</title>
</head>

<body>
    <h1 style="color: white;">Cadastro de Cliente</h1>

    <div class="container" style="width:500px; padding: 20px; border-radius: 25px; background-color: rgba(100, 55, 0, 0.25);">
        <form>            
        <EditForm Model="cliente" OnValidSubmit="EnviarCadastro">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col">
                    <div class="mb-3">
                        <label class="form-label">Nome:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@cliente.Nome" />
                            <ValidationMessage For="(() => cliente.Nome)" />
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="mb-3">
                        <label class="form-label">Sobrenome:</label>
                        <div>
                            <InputText class="form-control" @bind-Value="@cliente.Sobrenome" />
                            <ValidationMessage For="(() => cliente.Sobrenome)" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Email:</label>
                <div>
                    <InputText class="form-control" @bind-Value="@cliente.Email" />
                    <ValidationMessage For="(() => cliente.Email)" />
                </div>
            </div>
            <div class="mb-3">
                <label class="form-label">Senha:</label>
                <div>
                    <InputText class="form-control" type="password" id="senha" @bind-Value="@cliente.Senha" />
                    <ValidationMessage For="(() => cliente.Senha)" />
                </div>
            </div>
            <div class="mb-3 form-check">
                <input class="form-check-input" type="checkbox" onclick="mostrarSenha()">
                <label class="form-check-label" for="exampleCheck1">Mostrar senha</label>
            </div>
            <div class="mb-3 form-check">
                <input class="form-check-input" type="checkbox" id="termosCheck" onclick="termos()">
                <label class="form-check-label" for="termosCheck">
                    Eu li e concordo com os <a href="petglamour/termos" target="_blank" style="color: darkorange">Termos e Condições de Uso</a>
                </label>
            </div>
            <div class="grid text-center">
                <button class="btn btn-primary btn-lg" id="cadastroBtn" type="submit" style="background-color: darkorange; border-color: darkorange;" disabled>
                    Cadastrar
                </button>
            </div>
            <div class="grid text-center">
                    <p><br />Já tem uma conta? <a href="petglamour/login" style="color: darkorange; font-weight: bold;">Entre aqui.</a></p>
            </div>
        </EditForm>
        <div class="grid text-center">
            @if (cadastroRealizado)
            {
                <p>@mensagemCadastro</p>
                navigationManager.NavigateTo("/petglamour/login");
            }
        </div>
    </form>
    </div>
</body>
</html>

    @code {
        private Cliente cliente = new Cliente();
        private bool cadastroRealizado;
        private string mensagemCadastro;

        private async Task EnviarCadastro()
        {
            try
            {
                await repository.Add(cliente);
                cadastroRealizado = true;
                mensagemCadastro = "Cadastro realizado com sucesso!";
            }
            catch (Exception ex)
            {
                mensagemCadastro = "Ocorreu um erro ao realizar o cadastro: " + ex.Message;
            }
        }
    }